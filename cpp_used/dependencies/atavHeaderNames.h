#ifndef ATAVHEADERNAMES_H
#define ATAVHEADERNAMES_H

#include <vector>
#include <string>
#include <map>

/*
  in questo file ci sono specificate le categorie necesssarie per analisi header
*/

// questa mi permette di avere una LISTA di opzioni a cui far corrisondere una singola abbreviazione
// cosi se cambiano nomi e uno vuole rianalizzare file vecchi li trova comunque
std::map<std::vector<std::string>, std::string> atav_categories_abbreviation_map = {
  {{"Family ID"}, "family"},
  {{"Mother"}, "mother"},
  {{"Father"}, "father"},
  {{"Variant ID"}, "var_name"},
  {{"Variant Type"}, "var_type"},
  {{"Ref Allele"}, "ref"},
  {{"Alt Allele"}, "alt"},
  {{"Rs Number"}, "rs_name"},
  {{"Transcript Stable Id"}, "transcript_name"},
  {{"Has CCDS Transcript"}, "ccds_transcript"},
  {{"Effect"}, "effect"},
  {{"HGVS_c"}, "hgvs_c"},
  {{"HGVS_p"}, "hgvs_p"},
  {{"Polyphen Humdiv Score (CCDS)"}, "humdiv_score"},
  {{"Polyphen Humdiv Prediction (CCDS)"}, "humdiv_cat"},
  {{"Polyphen Humvar Score (CCDS)"}, "humvar_score"},
  {{"Polyphen Humvar Prediction (CCDS)"}, "humvar_cat"},
  {{"Gene Name", "Gene"}, "gene_name"},
  {{"UpToDate Gene Name"}, "updated_gene_name"},
  {{"Sample Name"}, "pz_name"},
  {{"Sample Type"}, "pz_type"},
  {{"Sample Phenotype"}, "pz_pheno"},
  {{"GT"}, "gt"},
  {{"DP Bin"}, "dp_bin"},
  {{"AD REF"}, "ad_ref"},
  {{"AD ALT"}, "ad_alt"},
  {{"Percent Alt Read"}, "perc_alt"},
  {{"GQ"}, "gq"},
  {{"Qual"}, "qual"},
  {{"FILTER"}, "filter"},
  {{"GT (mother)"}, "mother_gt"},
  {{"DP Bin (mother)"}, "mother_dp_bin"},
  {{"GT (father)"}, "father_gt"},
  {{"DP Bin (father)"}, "father_dp_bin"},
  {{"Denovo Flag"}, "denovo"},
  {{"Hom Case"}, "hom_cases"},
  {{"Het Case"}, "het_cases"},
  {{"Case AF"}, "cases_af"},
  {{"Case AC"}, "cases_ac"},
  {{"Ctrl AF"}, "controls_af"},
  {{"Evs All Maf"}, "evs_maf"},
  {{"Evs All Genotype Count"}, "evs_gts"},
  {{"ExAC global af"}, "exac_global_af"},
  {{"ExAC global gts"}, "exac_global_gts"},
  {{"ExAC afr af"}, "exac_afr_af"},
  {{"ExAC afr gts"}, "exac_afr_gts"},
  {{"ExAC amr af"}, "exac_amr_af"},
  {{"ExAC amr gts"}, "exac_amr_gts"},
  {{"ExAC eas af"}, "exac_eas_af"},
  {{"ExAC eas gts"}, "exac_eas_gts"},
  {{"ExAC sas af"}, "exac_sas_af"},
  {{"ExAC sas gts"}, "exac_sas_gts"},
  {{"ExAC fin af"}, "exac_fin_af"},
  {{"ExAC fin gts"}, "exac_fin_gts"},
  {{"ExAC nfe af"}, "exac_nfe_af"},
  {{"ExAC nfe gts"}, "exac_nfe_gts"},
  {{"ExAC oth af"}, "exac_oth_af"},
  {{"ExAC oth gts"}, "exac_oth_gts"},
  {{"gnomAD Exome FILTER"}, "gnomad_ex_filter"},
  {{"gnomAD Exome global_AF"}, "gnomad_ex_global_af"},
  {{"gnomAD Exome global_AN"}, "gnomad_ex_global_an"},
  {{"gnomAD Exome global_nhet"}, "gnomad_ex_global_nhet"},
  {{"gnomAD Exome global_nhomalt"}, "gnomad_ex_global_nhomalt"},
  {{"gnomAD Exome global_nhemi"}, "gnomad_ex_global_nhemi"},
  {{"gnomAD Exome controls_AF"}, "gnomad_ex_controls_af"},
  {{"gnomAD Exome controls_AN"}, "gnomad_ex_controls_an"},
  {{"gnomAD Exome controls_nhet"}, "gnomad_ex_controls_nhet"},
  {{"gnomAD Exome controls_nhomalt"}, "gnomad_ex_controls_nhomalt"},
  {{"gnomAD Exome controls_nhemi"}, "gnomad_ex_controls_nhemi"},
  {{"gnomAD Exome afr_AF"}, "gnomad_ex_afr_af"},
  {{"gnomAD Exome amr_AF"}, "gnomad_ex_amr_af"},
  {{"gnomAD Exome asj_AF"}, "gnomad_ex_asj_af"},
  {{"gnomAD Exome eas_AF"}, "gnomad_ex_eas_af"},
  {{"gnomAD Exome sas_AF"}, "gnomad_ex_sas_af"},
  {{"gnomAD Exome fin_AF"}, "gnomad_ex_fin_af"},
  {{"gnomAD Exome nfe_AF"}, "gnomad_ex_nfe_af"},
  {{"gnomAD Exome controls_afr_AF"}, "gnomad_ex_controls_afr_af"},
  {{"gnomAD Exome controls_amr_AF"}, "gnomad_ex_controls_amr_af"},
  {{"gnomAD Exome controls_asj_AF"}, "gnomad_ex_controls_asj_af"},
  {{"gnomAD Exome controls_eas_AF"}, "gnomad_ex_controls_eas_af"},
  {{"gnomAD Exome controls_sas_AF"}, "gnomad_ex_controls_sas_af"},
  {{"gnomAD Exome controls_fin_AF"}, "gnomad_ex_controls_fin_af"},
  {{"gnomAD Exome controls_nfe_AF"}, "gnomad_ex_controls_nfe_af"},
  {{"gnomAD Genome FILTER"}, "gnomad_gen_filter"},
  {{"gnomAD Genome global_AF"}, "gnomad_gen_global_af"},
  {{"gnomAD Genome global_AN"}, "gnomad_gen_global_an"},
  {{"gnomAD Genome global_nhet"}, "gnomad_gen_global_nhet"},
  {{"gnomAD Genome global_nhomalt"}, "gnomad_gen_global_nhomalt"},
  {{"gnomAD Genome global_nhemi"}, "gnomad_gen_global_nhemi"},
  {{"gnomAD Genome controls_AF"}, "gnomad_gen_controls_af"},
  {{"gnomAD Genome controls_AN"}, "gnomad_gen_controls_an"},
  {{"gnomAD Genome controls_nhet"}, "gnomad_gen_controls_nhet"},
  {{"gnomAD Genome controls_nhomalt"}, "gnomad_gen_controls_nhomalt"},
  {{"gnomAD Genome controls_nhemi"}, "gnomad_gen_controls_nhemi"},
  {{"gnomAD Genome afr_AF"}, "gnomad_gen_afr_af"},
  {{"gnomAD Genome amr_AF"}, "gnomad_gen_amr_af"},
  {{"gnomAD Genome asj_AF"}, "gnomad_gen_asj_af"},
  {{"gnomAD Genome eas_AF"}, "gnomad_gen_eas_af"},
  //{{"gnomAD Genome sas_AF"}, "gnomad_gen_sas_af"},
  {{"gnomAD Genome fin_AF"}, "gnomad_gen_fin_af"},
  {{"gnomAD Genome nfe_AF"}, "gnomad_gen_nfe_af"},
  {{"gnomAD Genome controls_afr_AF"}, "gnomad_gen_controls_afr_af"},
  {{"gnomAD Genome controls_amr_AF"}, "gnomad_gen_controls_amr_af"},
  {{"gnomAD Genome controls_asj_AF"}, "gnomad_gen_controls_asj_af"},
  {{"gnomAD Genome controls_eas_AF"}, "gnomad_gen_controls_eas_af"},
  //{{"gnomAD Genome controls_sas_AF"}, "gnomad_gen_controls_sas_af"},
  {{"gnomAD Genome controls_fin_AF"}, "gnomad_gen_controls_fin_af"},
  {{"gnomAD Genome controls_nfe_AF"}, "gnomad_gen_controls_nfe_af"},
  {{"HGMDm2site"}, "hgmd_m2"},
  {{"HGMDm1site"}, "hgmd_m1"},
  {{"HGMD site"}, "hgmd_site"},
  {{"HGMDp1site"}, "hgmd_p1"},
  {{"HGMDp2site"}, "hgmd_p2"},
  {{"HGMD indel 9bpflanks"}, "hgmd_9bp"},
  {{"HGMD Disease"}, "hgmd_disease"},
  {{"HGMD Class"}, "hgmd_class"},
  {{"HGMD PMID"}, "hgmd_pmid"},
  {{"ClinVar"}, "clinvar_id"},
  {{"ClinVar ClinRevStat"}, "clinvar_clinrevstat"},
  {{"ClinVar ClinRevStar"}, "clinvar_clinrevstars"},
  {{"ClinVar ClinSig"}, "clinvar_clinsig"},
  {{"ClinVar DiseaseDB"}, "clinvar_disease"},
  {{"ClinVar DiseaseName"}, "clinvar_disease_name"},
  {{"ClinVar PubmedID"}, "clinvar_pmid"},
  {{"ClinVar rsID"}, "clinvar_rs"},
  {{"ClinVar pathogenic indels"}, "clinvar_patho_indel_9bp"},
  {{"ClinVar Pathogenic Indel Count"}, "clinvar_patho_indel_count"},
  {{"Clinvar Pathogenic CNV Count"}, "clinvar_patho_cnv_count"},
  {{"ClinVar Pathogenic SNV Splice Count"}, "clinvar_patho_SNV_splice_count"},
  {{"ClinVar Pathogenic SNV Nonsense Count"}, "clinvar_patho_SNV_nonsense_count"},
  {{"ClinVar Pathogenic SNV Missense Count"}, "clinvar_patho_SNV_missense_count"},
  {{"ClinGen"}, "clingen"},
  {{"OMIM Disease"}, "omim"},
  {{"ACMG"}, "acmg_atav"},
  {{"ncGERP%tile"}, "nc_gerp_centile"},
  {{"pcGERP%tile"}, "pc_gerp_centile"},
  {{"LoF-pLI[ExAC]"}, "pli"},
  {{"LoF-pRec[ExAC]"}, "pli_rec"},
  {{"subRVIS Domain Name"}, "subrvis_domain_name"},
  {{"subRVIS Domain Score Percentile"}, "subrvis_domain_centile"},
  {{"subRVIS Exon Name"}, "subrvis_exon_name"},
  {{"subRVIS Exon Score Percentile"}, "subrvis_exon_centile"},
  {{"GenicConstraint_mis-z[ExAC]"}, "gcs_score"},
  {{"MTR Domain Percentile"}, "mtr_domain_centile"},
  {{"MTR Exon Percentile"}, "mtr_exon_centile"},
  {{"MTR"}, "mtr"},
  {{"MTR FDR"}, "mtr_fdr"},
  {{"MTR Centile"}, "mtr_centile"},
  {{"Gerp RS Score"}, "gerp_score"},
  {{"TraP Score"}, "trap_score"},
  {{"OEratio%tile[EVS]"}, "oe_evs"},
  {{"OEratio%tile[ExAC]"}, "oe_exac"},
  {{"REVEL"}, "revel"},
  //NUOVI
  {{"SIFT Prediction"} , "sift_prediction"},
  {{"SIFT score"} , "sift_score"},
  {{"ExAC AF popmax"} , "exac_af_popmax"},
  {{"1000G AC"} , "1000gp3_ac"},
  {{"1000G AF"} , "1000gp3_af"},
  {{"1000G Afr AC"} , "1000gp3_afr_ac"},
  {{"1000G Afr AF"} , "1000gp3_afr_af"},
  {{"1000G Eur AC"} , "1000gp3_eur_ac"},
  {{"1000G Eur AF"} , "1000gp3_eur_af"},
  {{"1000G Amr AC"} , "1000gp3_amr_ac"},
  {{"1000G Amr AF"} , "1000gp3_amr_af"},
  {{"1000G Eas AC"} , "1000gp3_eas_ac"},
  {{"1000G Eas AF"} , "1000gp3_eas_af"},
  {{"1000G Sas AC"} , "1000gp3_sas_ac"},
  {{"1000G Sas AF"} , "1000gp3_sas_af"},
  {{"UK10k AF"} , "uk10k_af"},
  {{"ESP6500 AA AF"} , "esp6500_aa_af"},
  {{"ESP6500 EA AC"} , "esp6500_ea_af"},
  {{"gnomAD Ex mean cov"} , "gnomade_mean_cov"},
  {{"gnomAD Gen mean cov"} , "gnomadg_mean_cov"},
  {{"gnomAD Ex 30x cov"} , "gnomade_30x_cov"},
  {{"gnomAD Gen 30x cov"} , "gnomadg_30x_cov"},
  {{"ADA score"} , "ada_score"},
  {{"RF score"} , "rf_score"},
  {{"GeneSplicer"} , "genesplicer"},
  {{"Mastermind Counts"} , "mastermind_counts"},
  {{"Mastermind mmid3"} , "mastermind_mmid3"},
  {{"CADD phred"} , "cadd_phred"},
  {{"CADD raw"} , "cadd_raw"},
  {{"Codons"} , "codons"},
  {{"Repeat Region"} , "repeated"}
};

std::vector<std::string> variant_abbreviations = {
  "var_name",
  "var_type",
  "ref",
  "alt",
  "rs_name",
  "transcript_name",
  "ccds_transcript",
  "effect",
  "hgvs_c",
  "hgvs_p",
  "humdiv_score",
  "humdiv_cat",
  "humvar_score",
  "humvar_cat",
  "gene_name",
  "updated_gene_name",
  "mother_gt",
  "mother_dp_bin",
  "father_gt",
  "father_dp_bin",
  "hom_cases",
  "het_cases",
  "cases_af",
  "cases_ac",
  "controls_af",
  "evs_maf",
  "evs_gts",
  "exac_global_af",
  "exac_global_gts",
  "exac_afr_af",
  "exac_afr_gts",
  "exac_amr_af",
  "exac_amr_gts",
  "exac_eas_af",
  "exac_eas_gts",
  "exac_sas_af",
  "exac_sas_gts",
  "exac_fin_af",
  "exac_fin_gts",
  "exac_nfe_af",
  "exac_nfe_gts",
  "exac_oth_af",
  "exac_oth_gts",
  "gnomad_ex_filter",
  "gnomad_ex_global_af",
  "gnomad_ex_global_an",
  "gnomad_ex_global_nhet",
  "gnomad_ex_global_nhomalt",
  "gnomad_ex_global_nhemi",
  "gnomad_ex_controls_af",
  "gnomad_ex_controls_an",
  "gnomad_ex_controls_nhet",
  "gnomad_ex_controls_nhomalt",
  "gnomad_ex_controls_nhemi",
  "gnomad_ex_afr_af",
  "gnomad_ex_amr_af",
  "gnomad_ex_asj_af",
  "gnomad_ex_eas_af",
  "gnomad_ex_sas_af",
  "gnomad_ex_fin_af",
  "gnomad_ex_nfe_af",
  "gnomad_ex_controls_afr_af",
  "gnomad_ex_controls_amr_af",
  "gnomad_ex_controls_asj_af",
  "gnomad_ex_controls_eas_af",
  "gnomad_ex_controls_sas_af",
  "gnomad_ex_controls_fin_af",
  "gnomad_ex_controls_nfe_af",
  "gnomad_gen_filter",
  "gnomad_gen_global_af",
  "gnomad_gen_global_an",
  "gnomad_gen_global_nhet",
  "gnomad_gen_global_nhomalt",
  "gnomad_gen_global_nhemi",
  "gnomad_gen_controls_af",
  "gnomad_gen_controls_an",
  "gnomad_gen_controls_nhet",
  "gnomad_gen_controls_nhomalt",
  "gnomad_gen_controls_nhemi",
  "gnomad_gen_afr_af",
  "gnomad_gen_amr_af",
  "gnomad_gen_asj_af",
  "gnomad_gen_eas_af",
  "gnomad_gen_sas_af",
  "gnomad_gen_fin_af",
  "gnomad_gen_nfe_af",
  "gnomad_gen_controls_afr_af",
  "gnomad_gen_controls_amr_af",
  "gnomad_gen_controls_asj_af",
  "gnomad_gen_controls_eas_af",
  "gnomad_gen_controls_sas_af",
  "gnomad_gen_controls_fin_af",
  "gnomad_gen_controls_nfe_af",
  "hgmd_m2",
  "hgmd_m1",
  "hgmd_site",
  "hgmd_p1",
  "hgmd_p2",
  "hgmd_9bp",
  "hgmd_disease",
  "hgmd_class",
  "hgmd_pmid",
  "clinvar_id",
  "clinvar_clinrevstat",
  "clinvar_clinrevstars",
  "clinvar_clinsig",
  "clinvar_disease",
  "clinvar_disease_name",
  "clinvar_pmid",
  "clinvar_rs",
  "clinvar_patho_indel_9bp",
  "clinvar_patho_indel_count",
  "clinvar_patho_cnv_count",
  "clinvar_patho_SNV_splice_count",
  "clinvar_patho_SNV_nonsense_count",
  "clinvar_patho_SNV_missense_count",
  "clingen",
  "omim",
  "acmg_atav",
  "nc_gerp_centile",
  "pc_gerp_centile",
  "pli",
  "pli_rec",
  "subrvis_domain_name",
  "subrvis_domain_centile",
  "subrvis_exon_name",
  "subrvis_exon_centile",
  "gcs_score",
  "mtr_domain_centile",
  "mtr_exon_centile",
  "mtr",
  "mtr_fdr",
  "mtr_centile",
  "gerp_score",
  "trap_score",
  "oe_evs",
  "oe_exac",
  "revel",
  "comphet_flag",
  "sift_prediction",
  "sift_score",
  "exac_af_popmax",
  "1000gp3_ac",
  "1000gp3_af",
  "1000gp3_afr_ac",
  "1000gp3_afr_af",
  "1000gp3_eur_ac",
  "1000gp3_eur_af",
  "1000gp3_amr_ac",
  "1000gp3_amr_af",
  "1000gp3_eas_ac",
  "1000gp3_eas_af",
  "1000gp3_sas_ac",
  "1000gp3_sas_af",
  "uk10k_af",
  "esp6500_aa_af",
  "esp6500_ea_af",
  "gnomade_mean_cov",
  "gnomadg_mean_cov",
  "gnomade_30x_cov",
  "gnomadg_30x_cov",
  "ada_score",
  "rf_score",
  "genesplicer",
  "mastermind_counts",
  "mastermind_mmid3",
  "cadd_phred",
  "cadd_raw",
  "codons",
  "repeated"
};

std::vector<std::string> patient_abbreviations = {
  "pz_name",
  "pz_type",
  "pz_pheno",
  "family",
  "mother",
  "father"
 };

std::vector<std::string> gene_abbreviations = {
  "gene_name"
  "gene_name_correct"
};

// queste le caratteristiche da salvare nella classe di VAR intenra del paziente
std::vector<std::string> patient_var_abbreviations = {
  "var_name",
  "gt",
  "mother_gt",
  "mother_dp_bin",
  "father_gt",
  "father_dp_bin",
  "dp_bin",
  "ad_ref",
  "ad_alt",
  "perc_alt",
  "gq",
  "qual",
  "filter",
  "denovo",
  "gene_name"
};


#endif
